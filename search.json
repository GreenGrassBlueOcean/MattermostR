[{"path":"https://greengrassblueocean.github.io/MattermostR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Laurens van der Burg Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Laurens van der Burg. Maintainer.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"van der Burg L (2024). MattermostR: Package (Title Case). R package version 0.1.0, https://greengrassblueocean.github.io/MattermostR/.","code":"@Manual{,   title = {MattermostR: What the Package Does (Title Case)},   author = {Laurens {van der Burg}},   year = {2024},   note = {R package version 0.1.0},   url = {https://greengrassblueocean.github.io/MattermostR/}, }"},{"path":[]},{"path":"https://greengrassblueocean.github.io/MattermostR/index.html","id":"mattermostr","dir":"","previous_headings":"","what":"MattermostR","title":"What the Package Does (Title Case)","text":"MattermostR R package designed interact Mattermost API sending messages, managing channels, uploading files, . package includes functionality automating interactions Mattermost R scripts, allowing easily send messages, upload attachments, manage teams channels.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"What the Package Does (Title Case)","text":"can install MattermostR package GitHub:","code":"# Install the devtools package if you don't have it already install.packages(\"devtools\")  # Install MattermostR devtools::install_github(\"GreenGrassBlueOcean/MattermostR\")"},{"path":[]},{"path":"https://greengrassblueocean.github.io/MattermostR/index.html","id":"id_1-send-messages-with-priority","dir":"","previous_headings":"Features","what":"1. Send Messages with Priority","title":"What the Package Does (Title Case)","text":"Send messages Mattermost channels optional priorities: - Normal - High - Low priority automatically normalized send_mattermost_message() function, don’t need worry case sensitivity (e.g., high, HIGH, High valid).","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/index.html","id":"id_2-attach-files-to-messages","dir":"","previous_headings":"Features","what":"2. Attach Files to Messages","title":"What the Package Does (Title Case)","text":"can attach files messages specifying file path. file first uploaded Mattermost server, file ID included message. Example:","code":"response <- send_mattermost_message(   channel_id = channel_id,    message = \"Here is your file!\",    file_path = \"output.txt\",    verbose = TRUE )"},{"path":"https://greengrassblueocean.github.io/MattermostR/index.html","id":"id_3-manage-teams-and-channels","dir":"","previous_headings":"Features","what":"3. Manage Teams and Channels","title":"What the Package Does (Title Case)","text":"package provides tools managing channels teams: 1.List Channels Groups: Retrieve channels groups team. 2.Create Channels: Programmatically create new channels team. 3.Delete Channels: Delete existing channels. 4.Look Channels Name: Find specific channel name get ID.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/index.html","id":"id_4-authentication","dir":"","previous_headings":"Features","what":"4. Authentication","title":"What the Package Does (Title Case)","text":"Authenticate Mattermost API using bearer token providing username password. authenticated, token stored future API calls.","code":"auth <- authenticate_mattermost(   base_url = \"https://yourmattermost.stackhero-network.com\",    token = \"your-token\" )"},{"path":"https://greengrassblueocean.github.io/MattermostR/index.html","id":"id_5-error-handling-and-validation","dir":"","previous_headings":"Features","what":"5. Error Handling and Validation","title":"What the Package Does (Title Case)","text":"Priority Validation: sending message, priority validated ensure ’s one Normal, High, Low. invalid priority provided, function return error. Input Validation: Ensures required fields (channel_id message) provided making API calls.","code":""},{"path":[]},{"path":"https://greengrassblueocean.github.io/MattermostR/index.html","id":"sending-a-message","dir":"","previous_headings":"Usage","what":"Sending a Message","title":"What the Package Does (Title Case)","text":"","code":"# Authenticate auth <- authenticate_mattermost(base_url = \"https://yourmattermost.stackhero-network.com\", token = \"your-token\")  # Send a message to a channel response <- send_mattermost_message(   channel_id = \"your-channel-id\",    message = \"Hello, Mattermost!\",    priority = \"High\",    verbose = TRUE )"},{"path":"https://greengrassblueocean.github.io/MattermostR/index.html","id":"sending-a-message-with-a-file","dir":"","previous_headings":"Usage","what":"Sending a Message with a File","title":"What the Package Does (Title Case)","text":"","code":"# Send a message with a file attachment response <- send_mattermost_message(   channel_id = \"your-channel-id\",    message = \"Here is a file attachment\",    file_path = \"path/to/file.txt\",    verbose = TRUE )"},{"path":"https://greengrassblueocean.github.io/MattermostR/index.html","id":"managing-channels","dir":"","previous_headings":"Usage","what":"Managing Channels","title":"What the Package Does (Title Case)","text":"","code":"# List all channels in a team channels <- get_team_channels(team_id = \"your-team-id\")  # Create a new channel create_mattermost_channel(team_id = \"your-team-id\", channel_name = \"new-channel\", channel_display_name = \"New Channel\")  # Delete a channel delete_mattermost_channel(channel_id = \"your-channel-id\")"},{"path":"https://greengrassblueocean.github.io/MattermostR/index.html","id":"roadmap","dir":"","previous_headings":"","what":"Roadmap","title":"What the Package Does (Title Case)","text":"Add Mattermost API endpoints team user management. Implement message threading support. Add unit tests edge cases advanced API features.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"What the Package Does (Title Case)","text":"project licensed MIT License.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/authenticate_mattermost.html","id":null,"dir":"Reference","previous_headings":"","what":"Authenticate with Mattermost API — authenticate_mattermost","title":"Authenticate with Mattermost API — authenticate_mattermost","text":"Authenticate Mattermost API","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/authenticate_mattermost.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Authenticate with Mattermost API — authenticate_mattermost","text":"","code":"authenticate_mattermost(   base_url,   token = NULL,   username = NULL,   password = NULL,   test_connection = FALSE )"},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/authenticate_mattermost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Authenticate with Mattermost API — authenticate_mattermost","text":"base_url base URL Mattermost server. add team name really  \"https://yourmattermost.stackhero-network.com/\" token Optional. Bearer token authentication. NULL, retrieved options(). username Optional. username login using token. password Optional. password login using token. test_connection Boolean. `TRUE`, function check connection status Mattermost.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/authenticate_mattermost.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Authenticate with Mattermost API — authenticate_mattermost","text":"`mattermost_auth` object containing `base_url` `headers` API calls.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/authenticate_mattermost.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Authenticate with Mattermost API — authenticate_mattermost","text":"","code":"if (FALSE) { # \\dontrun{ authenticate_mattermost(base_url = \"https://mattermost.stackhero-network.com\" , token = \"your token\", test_connection = TRUE) } # }"},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/check_mattermost_auth.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the object is a valid mattermost_auth object — check_mattermost_auth","title":"Check if the object is a valid mattermost_auth object — check_mattermost_auth","text":"Check object valid mattermost_auth object","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/check_mattermost_auth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the object is a valid mattermost_auth object — check_mattermost_auth","text":"","code":"check_mattermost_auth(auth)"},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/check_mattermost_auth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the object is a valid mattermost_auth object — check_mattermost_auth","text":"auth object check.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/check_mattermost_auth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the object is a valid mattermost_auth object — check_mattermost_auth","text":"NULL object valid, otherwise throws error.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/check_mattermost_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the Mattermost server is online — check_mattermost_status","title":"Check if the Mattermost server is online — check_mattermost_status","text":"Check Mattermost server online","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/check_mattermost_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the Mattermost server is online — check_mattermost_status","text":"","code":"check_mattermost_status(verbose = FALSE, auth = authenticate_mattermost())"},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/check_mattermost_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the Mattermost server is online — check_mattermost_status","text":"verbose Boolean. `TRUE`, function print request/response details information. auth list containing `base_url` `headers` authentication.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/check_mattermost_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the Mattermost server is online — check_mattermost_status","text":"TRUE server online; FALSE otherwise.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/check_mattermost_status.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if the Mattermost server is online — check_mattermost_status","text":"","code":"if (FALSE) { # \\dontrun{ check_mattermost_status() } # }"},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/create_channel.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new Mattermost channel — create_channel","title":"Create a new Mattermost channel — create_channel","text":"Create new Mattermost channel","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/create_channel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new Mattermost channel — create_channel","text":"","code":"create_channel(   team_id = NULL,   name = NULL,   display_name = NULL,   type = \"O\",   verbose = FALSE,   auth = authenticate_mattermost() )"},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/create_channel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new Mattermost channel — create_channel","text":"team_id ID team channel created. name short name channel. display_name display name channel. type type channel: \"O\" open (default) \"P\" private. verbose (Logical) `TRUE`, detailed information request response printed. auth authentication object created `authenticate_mattermost()`.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/create_channel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new Mattermost channel — create_channel","text":"list details created channel.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/create_channel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new Mattermost channel — create_channel","text":"","code":"if (FALSE) { # \\dontrun{ teams <- get_all_teams() new_channel <- create_channel(team_id = teams$id[1], name = \"newchannel2\" , display_name = \"a new channel\", verbose = TRUE) } # }"},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/delete_channel.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete a Mattermost channel — delete_channel","title":"Delete a Mattermost channel — delete_channel","text":"Archives Mattermost channel.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/delete_channel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete a Mattermost channel — delete_channel","text":"","code":"delete_channel(   channel_id,   team_id,   verbose = FALSE,   auth = authenticate_mattermost() )"},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/delete_channel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete a Mattermost channel — delete_channel","text":"channel_id ID channel deleted. team_id ID team channel belongs. verbose (Logical) `TRUE`, detailed information request response printed. auth authentication object created `authenticate_mattermost()`.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/delete_channel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete a Mattermost channel — delete_channel","text":"list details deletion status.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/delete_channel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Delete a Mattermost channel — delete_channel","text":"Note Channel Deletion channel deleted online via Mattermost API, permanently removed rather archived. archived channel can restored manually Mattermost channel management interface GUI. Mattermost REST API specification include option permanent deletion channels, functionality currently implemented package.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/delete_channel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delete a Mattermost channel — delete_channel","text":"","code":"if (FALSE) { # \\dontrun{ # First create a channel teams <- get_all_teams() new_channel <- create_channel(team_id = teams$id, name = \"newchannel\" , display_name = \"a new channel\")  # Now delete the channel info <- delete_channel(channel_id = new_channel$id, team_id = teams$id) } # }"},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/delete_old_messages.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete Messages Older Than X Days in a Mattermost Channel — delete_old_messages","title":"Delete Messages Older Than X Days in a Mattermost Channel — delete_old_messages","text":"function deletes messages older specified number days given Mattermost channel. fetches messages channel, checks timestamps, deletes ones older specified days.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/delete_old_messages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete Messages Older Than X Days in a Mattermost Channel — delete_old_messages","text":"","code":"delete_old_messages(channel_id, days, auth = authenticate_mattermost())"},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/delete_old_messages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete Messages Older Than X Days in a Mattermost Channel — delete_old_messages","text":"channel_id Character string. ID Mattermost channel messages deleted. days Numeric. age days messages deleted. auth authentication object created `authenticate_mattermost()`.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/delete_old_messages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete Messages Older Than X Days in a Mattermost Channel — delete_old_messages","text":"character vector message IDs deleted.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/delete_old_messages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delete Messages Older Than X Days in a Mattermost Channel — delete_old_messages","text":"","code":"if (FALSE) { # \\dontrun{   teams <- get_all_teams()   team_channels <- get_team_channels(team_id = teams$id[1])   channel_id <- get_channel_id_lookup(team_channels, name = \"off-topic\")   posts <- delete_old_messages(channel_id, 0)  } # }"},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/delete_post.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete a specific post in Mattermost — delete_post","title":"Delete a specific post in Mattermost — delete_post","text":"Delete specific post Mattermost","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/delete_post.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete a specific post in Mattermost — delete_post","text":"","code":"delete_post(post_id = NULL, verbose = FALSE, auth = authenticate_mattermost())"},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/delete_post.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete a specific post in Mattermost — delete_post","text":"post_id ID post delete. verbose Boolean. `TRUE`, function print request/response details information. auth authentication object created `authenticate_mattermost()`.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/delete_post.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete a specific post in Mattermost — delete_post","text":"Parsed JSON response confirming deletion.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/delete_post.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delete a specific post in Mattermost — delete_post","text":"","code":"if (FALSE) { # \\dontrun{  delete_post(post_id = \"fake_id\") } # }"},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_all_teams.html","id":null,"dir":"Reference","previous_headings":"","what":"List all teams in Mattermost — get_all_teams","title":"List all teams in Mattermost — get_all_teams","text":"List teams Mattermost","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_all_teams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all teams in Mattermost — get_all_teams","text":"","code":"get_all_teams(verbose = FALSE, auth = authenticate_mattermost())"},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_all_teams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List all teams in Mattermost — get_all_teams","text":"verbose (Logical) `TRUE`, detailed information request response printed. auth list containing `base_url` `headers` authentication.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_all_teams.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all teams in Mattermost — get_all_teams","text":"data frame containing details teams.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_all_teams.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List all teams in Mattermost — get_all_teams","text":"","code":"if (FALSE) { # \\dontrun{ teams <- get_all_teams() } # }"},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_all_users.html","id":null,"dir":"Reference","previous_headings":"","what":"Get information about a specific Mattermost user — get_all_users","title":"Get information about a specific Mattermost user — get_all_users","text":"Get information specific Mattermost user","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_all_users.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get information about a specific Mattermost user — get_all_users","text":"","code":"get_all_users(verbose = FALSE, auth = authenticate_mattermost())"},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_all_users.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get information about a specific Mattermost user — get_all_users","text":"verbose (Logical) `TRUE`, detailed information request response printed. auth authentication object created `authenticate_mattermost()`.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_all_users.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get information about a specific Mattermost user — get_all_users","text":"vector user_ids","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_all_users.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get information about a specific Mattermost user — get_all_users","text":"","code":"if (FALSE) { # \\dontrun{  get_all_users() } # }"},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_channel_id_lookup.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Channel ID by Display Name or Name — get_channel_id_lookup","title":"Get Channel ID by Display Name or Name — get_channel_id_lookup","text":"function retrieves channel ID associated specified display name name data frame channels. multiple channels display name, name parameter can used disambiguate.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_channel_id_lookup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Channel ID by Display Name or Name — get_channel_id_lookup","text":"","code":"get_channel_id_lookup(channels_df, display_name = NULL, name = NULL)"},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_channel_id_lookup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Channel ID by Display Name or Name — get_channel_id_lookup","text":"channels_df data frame containing channel information. must include least three columns: `id` (channel ID), `display_name`, `name`. display_name (Optional) character string representing display name channel ID retrieved. name (Optional) character string representing unique name channel ID retrieved.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_channel_id_lookup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Channel ID by Display Name or Name — get_channel_id_lookup","text":"character string containing channel ID found, otherwise error thrown.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_channel_id_lookup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Channel ID by Display Name or Name — get_channel_id_lookup","text":"","code":"# Sample channels data frame channels <- data.frame(   id = c(\"gy91r1kjnbnkdfu6jjoxzcm5ge\", \"utbtjouxkirniyh9u84oym6mnh\", \"abc12345xyz\", \"xyz56789abc\"),   display_name = c(\"Off-Topic\", \"Town Square\", \"Off-Topic\", \"Random\"),   name = c(\"off-topic\", \"town-square\", \"off-topic-team\", \"random\"),   stringsAsFactors = FALSE )  # As this display_name is not unique for \"Off-Topic\" this will lead to an error. #' # get_channel_id_lookup(channels, display_name = \"Off-Topic\")  # this will however return a result get_channel_id_lookup(channels, display_name = \"Town Square\") #> [1] \"utbtjouxkirniyh9u84oym6mnh\"  # Get the channel ID for \"Town Square\" by name get_channel_id_lookup(channels, name = \"town-square\") #> [1] \"utbtjouxkirniyh9u84oym6mnh\""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_channel_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Get information about a Mattermost channel — get_channel_info","title":"Get information about a Mattermost channel — get_channel_info","text":"Get information Mattermost channel","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_channel_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get information about a Mattermost channel — get_channel_info","text":"","code":"get_channel_info(channel_id, verbose = FALSE, auth = authenticate_mattermost())"},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_channel_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get information about a Mattermost channel — get_channel_info","text":"channel_id Mattermost channel ID. verbose (Logical) `TRUE`, detailed information request response printed. auth authentication object created `authenticate_mattermost()`.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_channel_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get information about a Mattermost channel — get_channel_info","text":"Parsed JSON response channel information.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_channel_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get information about a Mattermost channel — get_channel_info","text":"","code":"if (FALSE) { # \\dontrun{  get_channel_info(channel_id = \"newchannel2\", verbose = TRUE) } # }"},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_channel_posts.html","id":null,"dir":"Reference","previous_headings":"","what":"Get posts from a Mattermost channel — get_channel_posts","title":"Get posts from a Mattermost channel — get_channel_posts","text":"Get posts Mattermost channel","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_channel_posts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get posts from a Mattermost channel — get_channel_posts","text":"","code":"get_channel_posts(   channel_id,   verbose = FALSE,   auth = authenticate_mattermost() )"},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_channel_posts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get posts from a Mattermost channel — get_channel_posts","text":"channel_id Mattermost channel ID. verbose Boolean. `TRUE`, function print request/response details information. auth authentication object created `authenticate_mattermost()`.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_channel_posts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get posts from a Mattermost channel — get_channel_posts","text":"Parsed JSON response posts channel.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_channel_posts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get posts from a Mattermost channel — get_channel_posts","text":"","code":"if (FALSE) { # \\dontrun{   teams <- get_all_teams()   team_channels <- get_team_channels(team_id = teams$id[1])   channel_id <- get_channel_id_lookup(team_channels, name = \"off-topic\")   posts <- get_channel_posts(channel_id) } # }"},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_mattermost_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve a file from Mattermost — get_mattermost_file","title":"Retrieve a file from Mattermost — get_mattermost_file","text":"function retrieves file Mattermost based file ID.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_mattermost_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve a file from Mattermost — get_mattermost_file","text":"","code":"get_mattermost_file(file_id, auth = authenticate_mattermost())"},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_mattermost_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve a file from Mattermost — get_mattermost_file","text":"file_id ID file retrieved. auth list containing `base_url` `headers` authentication.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_mattermost_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve a file from Mattermost — get_mattermost_file","text":"response Mattermost API, may contain file data.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_mattermost_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve a file from Mattermost — get_mattermost_file","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming you have already authenticated and obtained the file_id file_id <- \"your_file_id_here\" file_response <- get_mattermost_file(file_id = file_id) print(file_response)  file_response <- get_mattermost_file(file_id = \"i5rb43jei787jxcud7ekyyyyhc\") } # }"},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_me.html","id":null,"dir":"Reference","previous_headings":"","what":"Get information about which user is belonging to bearer key, — get_me","title":"Get information about which user is belonging to bearer key, — get_me","text":"Get information user belonging bearer key,","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_me.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get information about which user is belonging to bearer key, — get_me","text":"","code":"get_me(verbose = TRUE, auth = authenticate_mattermost())"},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_me.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get information about which user is belonging to bearer key, — get_me","text":"verbose (Logical) `TRUE`, detailed information request response printed. auth authentication object created `authenticate_mattermost()`.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_me.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get information about which user is belonging to bearer key, — get_me","text":"list user information authentication key","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_me.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get information about which user is belonging to bearer key, — get_me","text":"","code":"if (FALSE) { # \\dontrun{  get_me() } # }"},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_team.html","id":null,"dir":"Reference","previous_headings":"","what":"Get data of a single team from its team_id — get_team","title":"Get data of a single team from its team_id — get_team","text":"Get data single team team_id","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_team.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get data of a single team from its team_id — get_team","text":"","code":"get_team(team_id = NULL, verbose = FALSE, auth = authenticate_mattermost())"},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_team.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get data of a single team from its team_id — get_team","text":"team_id ID Mattermost team. verbose (Logical) `TRUE`, detailed information request response printed. auth list containing `base_url` `headers` authentication.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_team.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get data of a single team from its team_id — get_team","text":"data frame containing details team.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_team.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get data of a single team from its team_id — get_team","text":"","code":"if (FALSE) { # \\dontrun{ teams <- get_all_teams() teaminfo <- lapply(teams$id, get_team) } # }"},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_team_channels.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the list of channels for a team — get_team_channels","title":"Get the list of channels for a team — get_team_channels","text":"Get list channels team","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_team_channels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the list of channels for a team — get_team_channels","text":"","code":"get_team_channels(   team_id = NULL,   verbose = FALSE,   auth = authenticate_mattermost() )"},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_team_channels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the list of channels for a team — get_team_channels","text":"team_id ID team retrieve channels. verbose (Logical) `TRUE`, detailed information request response printed. auth list containing `base_url` `headers` authentication.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_team_channels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the list of channels for a team — get_team_channels","text":"data frame channels IDs names.","code":""},{"path":[]},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_team_channels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the list of channels for a team — get_team_channels","text":"","code":"if (FALSE) { # \\dontrun{ authenticate_mattermost() teams <- get_all_teams() team_channels <- get_team_channels(team_id = teams$id[1]) } # }"},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_user.html","id":null,"dir":"Reference","previous_headings":"","what":"Get information about a specific Mattermost user — get_user","title":"Get information about a specific Mattermost user — get_user","text":"Get information specific Mattermost user","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_user.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get information about a specific Mattermost user — get_user","text":"","code":"get_user(user_id = NULL, verbose = FALSE, auth = authenticate_mattermost())"},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_user.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get information about a specific Mattermost user — get_user","text":"user_id ID post delete. verbose (Logical) `TRUE`, detailed information request response printed. auth authentication object created `authenticate_mattermost()`.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_user.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get information about a specific Mattermost user — get_user","text":"vector user_ids","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_user.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get information about a specific Mattermost user — get_user","text":"","code":"if (FALSE) { # \\dontrun{  users <- get_all_users()  userinfo <- lapply(users, get_user) } # }"},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_user_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Get information about a specific Mattermost user — get_user_info","title":"Get information about a specific Mattermost user — get_user_info","text":"Get information specific Mattermost user","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_user_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get information about a specific Mattermost user — get_user_info","text":"","code":"get_user_info(user_id = NULL, auth = authenticate_mattermost())"},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_user_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get information about a specific Mattermost user — get_user_info","text":"user_id Mattermost user ID. auth authentication object created `authenticate_mattermost()`.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_user_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get information about a specific Mattermost user — get_user_info","text":"Parsed JSON response user information.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/get_user_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get information about a specific Mattermost user — get_user_info","text":"","code":"if (FALSE) { # \\dontrun{ users <- get_all_users() userinfo <- lapply(users, get_user_info) } # }"},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/handle_response_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Handle the content of the response — handle_response_content","title":"Handle the content of the response — handle_response_content","text":"Handle content response","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/handle_response_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handle the content of the response — handle_response_content","text":"","code":"handle_response_content(response, verbose = FALSE)"},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/handle_response_content.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handle the content of the response — handle_response_content","text":"response response object API request. verbose Boolean. `TRUE`, function print response details information.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/handle_response_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handle the content of the response — handle_response_content","text":"response object content type JSON, warning .","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/mattermost_api_request.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a Mattermost API Request — mattermost_api_request","title":"Make a Mattermost API Request — mattermost_api_request","text":"function sends HTTP request Mattermost API using authentication details, endpoint, method provided. handles retries exponential backoff failed requests supports regular JSON requests multipart file uploads.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/mattermost_api_request.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a Mattermost API Request — mattermost_api_request","text":"","code":"mattermost_api_request(   auth,   endpoint,   method = \"GET\",   body = NULL,   multipart = FALSE,   verbose = FALSE )"},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/mattermost_api_request.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a Mattermost API Request — mattermost_api_request","text":"auth list containing `base_url` `headers` (includes authentication token). endpoint string specifying API endpoint (e.g., `\"/api/v4/teams\"`). method string specifying HTTP method use. Options include `\"GET\"`, `\"POST\"`, `\"PUT\"`, `\"DELETE\"`. body (Optional) list object representing body request (e.g., `POST` `PUT` requests). multipart (Logical) Set `TRUE` request includes multipart data (e.g., file upload). verbose (Logical) `TRUE`, detailed information request response printed.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/mattermost_api_request.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a Mattermost API Request — mattermost_api_request","text":"content response, usually parsed JSON, error message request fails.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/normalize_priority.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize the priority input — normalize_priority","title":"Normalize the priority input — normalize_priority","text":"function converts various casing inputs priority correct format.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/normalize_priority.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize the priority input — normalize_priority","text":"","code":"normalize_priority(priority)"},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/normalize_priority.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize the priority input — normalize_priority","text":"priority string representing priority.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/normalize_priority.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize the priority input — normalize_priority","text":"string corrected priority format.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/send_mattermost_message.html","id":null,"dir":"Reference","previous_headings":"","what":"Send a text message to a Mattermost channel, optionally with multiple attachments — send_mattermost_message","title":"Send a text message to a Mattermost channel, optionally with multiple attachments — send_mattermost_message","text":"function sends text message Mattermost channel, optionally including one attachment files.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/send_mattermost_message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Send a text message to a Mattermost channel, optionally with multiple attachments — send_mattermost_message","text":"","code":"send_mattermost_message(   channel_id,   message,   priority = \"Normal\",   file_path = NULL,   comment = NULL,   verbose = FALSE,   auth = authenticate_mattermost() )"},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/send_mattermost_message.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Send a text message to a Mattermost channel, optionally with multiple attachments — send_mattermost_message","text":"channel_id ID Mattermost channel. message message content. priority string specifying priority message. Must one : - \"Normal\" (default) - \"High\" - \"Low\" file_path vector file paths sent attachments. comment comment accompany attachment files. verbose Boolean. `TRUE`, function print request/response details information. auth authentication object created `authenticate_mattermost()`.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/send_mattermost_message.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Send a text message to a Mattermost channel, optionally with multiple attachments — send_mattermost_message","text":"Parsed response Mattermost server.","code":""},{"path":"https://greengrassblueocean.github.io/MattermostR/reference/send_mattermost_message.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Send a text message to a Mattermost channel, optionally with multiple attachments — send_mattermost_message","text":"","code":"if (FALSE) { # \\dontrun{ # Define channel ID and message authenticate_mattermost() teams <- get_all_teams() team_channels <- get_team_channels(team_id = teams$id[1]) channel_id <- get_channel_id_lookup(team_channels, \"Off-Topic\")  message <- paste(\"Hello, Mattermost! This is a test message at\", Sys.time())  # Send the message with a plot attachment tmp_plot <- tempfile(fileext = \".png\") plot <- ggplot2::ggplot(cars, ggplot2::aes(x = speed, y = dist)) +   ggplot2::geom_point()  ggplot2::ggsave(filename = tmp_plot, plot = plot)  response <- send_mattermost_message(   channel_id = channel_id,   message = message,   priority = \"High\",   file_path = tmp_plot,   verbose = TRUE ) print(response)   # Send message with a text file attachment fileconn <- file(\"output.txt\") writeLines(c(\"Hello\", \"world\"), fileconn) close(fileconn)  response <- send_mattermost_message(   channel_id = channel_id,   message = message,   file_path = c(\"output.txt\", tmp_plot),   verbose = TRUE,   priority = \"High\" ) print(response) unlink(\"output.txt\") unlink(tmp_plot) } # }"}]

# File: tests/testthat/test-retry.R
library(testthat)
library(mockery)



test_that("mattermost_api_request retries on failure with exponential backoff", {
  # Mock failures for the first two attempts and success on the third
  failure_mock <- mockery::mock(list(status_code = 500, content = "server error"), cycle = 2)
  success_mock <- mockery::mock(list(status_code = 200, content = '{ "message": "success" }'))
  mockery::stub(mattermost_api_request, "httr2::req_perform", c(failure_mock, success_mock))

  auth <- authenticate_mattermost("http://example.com", "test-token")

  # Test that the function retries twice and succeeds on the third attempt
  expect_message(mattermost_api_request(auth, "/api/v4/test", retries = 2, backoff = 0.1),
                 "Retrying", times = 2)

  mockery::expect_called(failure_mock, 2)
  mockery::expect_called(success_mock, 1)
})

test_that("mattermost_api_request retries on timeout", {
  # Mock timeouts for the first two attempts and success on the third
  timeout_mock <- mockery::mock(error("Timeout"), cycle = 2)
  success_mock <- mockery::mock(list(status_code = 200, content = '{ "message": "success" }'))
  mockery::stub(mattermost_api_request, "httr2::req_perform", c(timeout_mock, success_mock))

  auth <- authenticate_mattermost("http://example.com", "test-token")

  # Test that the function retries twice and succeeds on the third attempt
  expect_message(mattermost_api_request(auth, "/api/v4/test", retries = 2, backoff = 0.1),
                 "Request timed out", times = 2)

  mockery::expect_called(timeout_mock, 2)
  mockery::expect_called(success_mock, 1)
})

test_that("mattermost_api_request stops after maximum retries", {
  # Mock failure for all attempts
  failure_mock <- mockery::mock(list(status_code = 500, content = "server error"), cycle = 3)
  mockery::stub(mattermost_api_request, "httr2::req_perform", failure_mock)

  auth <- authenticate_mattermost("http://example.com", "test-token")

  # Test that the function stops after 3 retries and fails
  expect_error(mattermost_api_request(auth, "/api/v4/test", retries = 2, backoff = 0.1),
               "Failed after 2 retries")

  mockery::expect_called(failure_mock, 3)
})
